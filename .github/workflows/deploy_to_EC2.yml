name: ÏµúÏ†ÅÌôîÎêú EC2 Î∞∞Ìè¨
run-name: ÏµúÏ†ÅÌôîÎêú EC2 Î∞∞Ìè¨Î•º Ïã§ÌñâÌï©ÎãàÎã§. üöÄ
on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./front
    steps:
      - name: ÏΩîÎìú Ï≤¥ÌÅ¨ÏïÑÏõÉ
        uses: actions/checkout@v2

      - name: Node.js ÏÑ§Ï†ï
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: ÏùòÏ°¥ÏÑ± ÏÑ§Ïπò Î∞è ÎπåÎìú
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
        run: |
          yarn install --frozen-lockfile
          yarn build

      - name: ÌååÏùº XZ ÏïïÏ∂ï
        run: |
          tar -cf - \
            --exclude='.next/cache' \
            .next \
            | xz -9e > next-build.tar.xz

      - name: SSH ÌÇ§ ÏÑ§Ï†ï
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          mkdir -p ~/.ssh
          echo "$EC2_SSH_KEY" > ~/.ssh/ec2_key.pem
          chmod 600 ~/.ssh/ec2_key.pem
          ssh-keyscan -H $EC2_HOST >> ~/.ssh/known_hosts

      - name: EC2Ïóê ÏïïÏ∂ï ÌååÏùº Ï†ÑÏÜ° Î∞è Î∞∞Ìè¨
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          scp -i ~/.ssh/ec2_key.pem -o StrictHostKeyChecking=no \
            next-build.tar.xz $EC2_USER@$EC2_HOST:~/front/
          ssh -i ~/.ssh/ec2_key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST "
            cd ~/front && \
            xz -d next-build.tar.xz && \
            tar -xf next-build.tar && \
            rm next-build.tar && \
            yarn install --production --frozen-lockfile && \
            pm2 stop frontend || true && \
            pm2 delete frontend || true && \
            pm2 start yarn --name 'frontend' -- start --port 8080
          "
