name: sentry
run-name: Sentry Î¶¥Î¶¨Ï¶àÎ•º ÏÉùÏÑ±Ìï©ÎãàÎã§. üöÄ
on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write #  to cancel/stop running workflows (styfle/cancel-workflow-action)
  contents: read #  to fetch code (actions/checkout)

jobs:
  main:
    strategy:
      fail-fast: false
      matrix:
        node: [20]
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 10

      - name: ‚éî Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: ÏùòÏ°¥ÏÑ± ÏÑ§Ïπò Î∞è ÎπåÎìú
        working-directory: ./front
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        run: |
          yarn install --frozen-lockfile
          yarn build

      - name: Install sentry-cli
        working-directory: ./front
        run: yarn global add @sentry/cli

      - name: Create Sentry release
        working-directory: ./front
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: junyup
          SENTRY_PROJECT: coreal_project
        run: |
          export SENTRY_LOG_LEVEL=debug
          export VERSION=$(sentry-cli releases propose-version)
          sentry-cli releases new $VERSION
          sentry-cli releases set-commits --auto --ignore-missing $VERSION

      - name: Finalize Sentry release
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: junyup
          SENTRY_PROJECT: coreal_project
        run: |
          export SENTRY_LOG_LEVEL=debug
          export VERSION=$(sentry-cli releases propose-version)
          sentry-cli releases finalize $VERSION
